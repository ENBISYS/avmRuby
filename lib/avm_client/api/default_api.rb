=begin
#AVM

#This is api for AVM (automated valuation machine)

The version of the AvmClient document: 1.0.0
Contact: info@enbisys.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.0.3

=end

require 'cgi'

module AvmClient
  class DefaultApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get only property price valuation without confidence estimation
    # @param property_features [PropertyFeatures] Property features that describe property
    # @param [Hash] opts the optional parameters
    # @return [Integer]
    def get_fast_valuation(property_features, opts = {})
      data, _status_code, _headers = get_fast_valuation_with_http_info(property_features, opts)
      data
    end

    # Get only property price valuation without confidence estimation
    # @param property_features [PropertyFeatures] Property features that describe property
    # @param [Hash] opts the optional parameters
    # @return [Array<(Integer, Integer, Hash)>] Integer data, response status code and response headers
    def get_fast_valuation_with_http_info(property_features, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.get_fast_valuation ...'
      end
      # verify the required parameter 'property_features' is set
      if @api_client.config.client_side_validation && property_features.nil?
        fail ArgumentError, "Missing the required parameter 'property_features' when calling DefaultApi.get_fast_valuation"
      end
      # resource path
      local_var_path = '/properties/getFastValuation'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/problem+json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(property_features) 

      # return_type
      return_type = opts[:return_type] || 'Integer' 

      # auth_names
      auth_names = opts[:auth_names] || ['ApiKeyAuth']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#get_fast_valuation\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get property price valuation with confidence estimation
    # @param property_features [PropertyFeatures] Property features to valuate
    # @param [Hash] opts the optional parameters
    # @return [Valuation]
    def get_valuation(property_features, opts = {})
      data, _status_code, _headers = get_valuation_with_http_info(property_features, opts)
      data
    end

    # Get property price valuation with confidence estimation
    # @param property_features [PropertyFeatures] Property features to valuate
    # @param [Hash] opts the optional parameters
    # @return [Array<(Valuation, Integer, Hash)>] Valuation data, response status code and response headers
    def get_valuation_with_http_info(property_features, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.get_valuation ...'
      end
      # verify the required parameter 'property_features' is set
      if @api_client.config.client_side_validation && property_features.nil?
        fail ArgumentError, "Missing the required parameter 'property_features' when calling DefaultApi.get_valuation"
      end
      # resource path
      local_var_path = '/properties/getValuation'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/problem+json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(property_features) 

      # return_type
      return_type = opts[:return_type] || 'Valuation' 

      # auth_names
      auth_names = opts[:auth_names] || ['ApiKeyAuth']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#get_valuation\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
